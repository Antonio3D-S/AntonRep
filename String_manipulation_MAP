/*
 *  +=============== Presentación ===============+
 *
 *  Enunciado del problema:
 *  Realizar un programa C++ que cuente la frecuencia en la que aparece un caracter en una cadena.
 *  Autores (ID - Nombre):
 *  1107555 - Angel Soriano
 *  1114790 - Gabriel Antonio Alba Natera
 *  1114290 - Angel Antonio Orona Pimentel
 *  1116252 - Radhames Ventura 
 *
 *  Fecha en la que se desarrollo el programa (dd/mm/aa):
 *  12/12/2023
 */
#include <iostream>
#include <string>
#include <map>
#include <cctype>

using namespace std;

struct FrecuenciaCaracteres {

    //map es un tipo de estructura que genera una tabla hash, cada vez que entra un elemento nuevo, se le atrivuye su propio hash para permitir una mejor identificacion.
    map<wchar_t, int> frecuenciaCaracteres;
    int totalCaracteres = 0;

    // Función para normalizar caracteres (convertir a minúsculas y quitar acentos)
    wchar_t normalizarCaracter(wchar_t c) {
        c = towlower(c);

        // Quitar acentos
        if (c == L'á' || c == L'à' || c == L'â' || c == L'ä') {
            return L'a';
        } else if (c == L'é' || c == L'è' || c == L'ê' || c == L'ë') {
            return L'e';
        } else if (c == L'í' || c == L'ì' || c == L'î' || c == L'ï') {
            return L'i';
        } else if (c == L'ó' || c == L'ò' || c == L'ô' || c == L'ö') {
            return L'o';
        } else if (c == L'ú' || c == L'ù' || c == L'û' || c == L'ü') {
            return L'u';
        } else {
            return c;
        }
    }

    void contarFrecuencias(const wstring& texto) {
        for (wchar_t caracter : texto) {
            if (iswalnum(caracter)) {  // Aceptar solo números y letras
                wchar_t caracterNormalizado = normalizarCaracter(caracter);
                frecuenciaCaracteres[caracterNormalizado]++;
                totalCaracteres++;
            }
        }
    }

    void mostrarResultados() const {
        int total = frecuenciaCaracteres.size();
        wcout << L"Total de caracteres de la cadena [" << total << L"]" << endl;
        wcout << L"Frecuencia de cada caracter en el texto:" << endl;

        for (const auto& entry : frecuenciaCaracteres) {
            wchar_t caracter = entry.first;
            int apariciones = entry.second;
            double porcentaje = (static_cast<double>(apariciones) / totalCaracteres) * 100;
            wcout << L"El caracter '" << caracter << L"' aparece [" << apariciones << L"] veces, con un porcentaje de: " << porcentaje << L"%" << endl;
        }
    }
};

int main() {
    wcout << L"Ingrese un texto: ";
    wstring texto;
    getline(wcin, texto);

    FrecuenciaCaracteres frecuencia;
    frecuencia.contarFrecuencias(texto);
    frecuencia.mostrarResultados();

    return 0;
}
